services:
  postgres:
    image: postgres:latest
    container_name: mangapark
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - parser

  pgweb:
    image: sosedoff/pgweb
    container_name: pgwebMP
    restart: always
    depends_on:
      - postgres
    environment:
      PGWEB_DATABASE_URL: "postgres://postgres:postgres@mangapark:5432/postgres?sslmode=disable"
    ports:
      - "8081:8081"
    networks:
      - parser

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    restart: always
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - /mnt/x/docker/s3/mangapark:/data

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    # environment:
      # - GF_DATABASE_TYPE=postgres
      # - GF_DATABASE_HOST=postgres@mangapark:5432
      # - GF_DATABASE_NAME=postgres
      # - GF_DATABASE_USER=postgres
      # - GF_DATABASE_PASSWORD=postgres
    depends_on:
      - prometheus
    networks:
      - parser

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - parser
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

volumes:
  pgdata:
  es_data:
  grafana-storage:

networks:
  parser:
    driver: bridge
